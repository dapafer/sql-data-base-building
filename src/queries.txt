# Creation of "stores", "staff" and "customers" tables.

CREATE TABLE blockbuster.stores (
    store_id INT PRIMARY KEY,
    address VARCHAR(100),
    phone_number VARCHAR(20),
    email VARCHAR(50)
);

CREATE TABLE blockbuster.staff (
    staff_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    personal_ID VARCHAR(20),
    phone_number VARCHAR(20)
);

CREATE TABLE blockbuster.customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    phone_number VARCHAR(20),
    email VARCHAR(50)
);



# Creation of rows for "stores" and "staff" tables.

INSERT INTO blockbuster.stores (store_id, address, phone_number, email)
VALUES (1, '123 Main St', '555-1234', 'store1@example.com');

INSERT INTO blockbuster.stores (store_id, address, phone_number, email)
VALUES (2, '456 Elm St', '555-5678', 'store2@example.com');



INSERT INTO blockbuster.staff (staff_id, first_name, last_name, personal_ID, phone_number)
VALUES (1, 'John', 'Doe', '123456789', '555-1111');

INSERT INTO blockbuster.staff (staff_id, first_name, last_name, personal_ID, phone_number)
VALUES (2, 'Jane', 'Smith', '987654321', '555-2222');



# Queries about database.

# 1. It will show the actors and the films in which they have participated:

SELECT a.first_name AS 'NAME',
        a.last_name AS 'LAST NAME',
        f.title AS 'FILM'
FROM actors AS a
		JOIN actors_films AS af ON a.actor_id = af.actor_id
        JOIN films AS f ON af.film_id = f.film_id
        ;

# 2. Show the name of the customers, the title of the films they have rented and the date of rent:

SELECT c.first_name AS 'NAME',
		c.last_name AS 'LAST NAME',
        f.title AS 'FILM', 
        r.rental_date AS 'DATE'
FROM customers AS c
		JOIN rentals AS r ON c.customer_id = r.customer_id
        JOIN inventories AS i ON r.inventory_id = i.inventory_id
        JOIN films AS f ON i.film_id = f.film_id
        ;

# 3. Show the name of the actors, the title of the films in which they have participated and the category of the films:

SELECT a.first_name AS 'NAME',
		a.last_name AS 'LAST NAME',
        f.title AS 'FILM',
        f.category AS 'CATEGORY'
FROM actors AS a
		JOIN actors_films AS af ON a.actor_id = af.actor_id
        JOIN films AS f ON af.film_id = f.film_id
        ;

# 4. Show the title of the films, the name of the actors who have participated in them and the year of release:

SELECT f.title AS 'FILM',
		CONCAT(a.first_name, ' ', a.last_name) AS 'ACTOR NAME',
        f.release_year AS 'YEAR'
FROM films AS f
		JOIN actors_films AS af ON f.film_id = af.film_id
        JOIN actors AS a ON af.actor_id = a.actor_id
        ;

# 5. Display the title of the films, the name of the customer who has rented them and the rental date ordered by film title:

SELECT f.title AS 'FILM',
		CONCAT(c.first_name, ' ', c.last_name) AS 'CUSTOMER NAME',
        r.rental_date AS 'DATE'
FROM films AS f
		JOIN inventories AS i ON f.film_id = i.film_id
        JOIN rentals AS r ON i.inventory_id = r.inventory_id
        JOIN customers AS c ON r.customer_id = c.customer_id
ORDER BY f.title
;

# 6. Show the number of films available in each store:

SELECT s.store_id AS 'ID',
		s.address AS 'ADDRESS',
        COUNT(i.inventory_id) AS 'AVAILABLE FILMS'
FROM stores AS s
		LEFT JOIN inventories AS i ON s.store_id = i.store_id
GROUP BY s.store_id, s.address
;

# 7. Show the number of films rented by each customer:

SELECT c.customer_id AS 'ID',
		CONCAT(c.first_name, ' ', c.last_name) AS 'CUSTOMER_NAME',
        COUNT(r.rental_id) AS 'RENTAL COUNT'
FROM customers AS c
		LEFT JOIN rentals AS r ON c.customer_id = r.customer_id
		GROUP BY c.customer_id, CUSTOMER_NAME
        ;

# 8. Show the year of release and the number of films released in each year:

SELECT release_year AS 'YEAR',
		COUNT(film_id) AS 'FILM COUNT'
FROM films
GROUP BY release_year
;

# 9. Show the five longest movies:

SELECT title,
		length
FROM films
ORDER BY length DESC
LIMIT 5
;

# 10. Show the names of the top 10 actors in alphabetical order:

SELECT first_name AS 'NAME',
		last_name AS 'LAST NAME'
FROM actors
ORDER BY last_name, first_name
LIMIT 10
;
